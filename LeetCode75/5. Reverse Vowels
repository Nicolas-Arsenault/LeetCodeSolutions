C#
Not an optimized solution, but it can be turned into a modular solution and easy to understand.
1, extracts all vowels
2. Reverses them
3. Create a new string with these vowels

```
public class Solution
{
    public string ReverseVowels(string s)
    {
        int i = 0;
        //Store all vowels in an array
        string vowels = "";
        string ans = "";
        string finalString = "";

        foreach (char c in s)
        {
            if (c == 'A' || c == 'a' || c == 'E' || c == 'e' || c == 'I' || c == 'i' || c == 'O' || c == 'o' || c == 'U' || c == 'u')
            {
                vowels += c;
            }
            i++;
        }

        char[] vowelsChar = vowels.ToCharArray();

        for (int i2 = vowelsChar.Length - 1; i2 >= 0; i2--)
        {
            ans += vowelsChar[i2];
        }
        i = 0;

        char[] inversedVowels = ans.ToCharArray();

        foreach (char c in s)
        {

            if (c == 'A' || c == 'a' || c == 'E' || c == 'e' || c == 'I' || c == 'i' || c == 'O' || c == 'o' || c == 'U' || c == 'u')
            {
                finalString += inversedVowels[i];
                i++;
            }
            else
            {
                finalString += c;
            }
        }

        return finalString;
    }
}
```
